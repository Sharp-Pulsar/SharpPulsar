// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace PulsarAdmin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class NamespaceBundleStats
    {
        /// <summary>
        /// Initializes a new instance of the NamespaceBundleStats class.
        /// </summary>
        public NamespaceBundleStats()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NamespaceBundleStats class.
        /// </summary>
        public NamespaceBundleStats(double? msgRateIn = default(double?), double? msgThroughputIn = default(double?), double? msgRateOut = default(double?), double? msgThroughputOut = default(double?), int? consumerCount = default(int?), int? producerCount = default(int?), long? topics = default(long?), long? cacheSize = default(long?))
        {
            MsgRateIn = msgRateIn;
            MsgThroughputIn = msgThroughputIn;
            MsgRateOut = msgRateOut;
            MsgThroughputOut = msgThroughputOut;
            ConsumerCount = consumerCount;
            ProducerCount = producerCount;
            Topics = topics;
            CacheSize = cacheSize;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msgRateIn")]
        public double? MsgRateIn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msgThroughputIn")]
        public double? MsgThroughputIn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msgRateOut")]
        public double? MsgRateOut { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msgThroughputOut")]
        public double? MsgThroughputOut { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "consumerCount")]
        public int? ConsumerCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "producerCount")]
        public int? ProducerCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "topics")]
        public long? Topics { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cacheSize")]
        public long? CacheSize { get; set; }

    }
}
