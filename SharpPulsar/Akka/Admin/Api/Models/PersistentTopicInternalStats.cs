// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace PulsarAdmin.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PersistentTopicInternalStats
    {
        /// <summary>
        /// Initializes a new instance of the PersistentTopicInternalStats
        /// class.
        /// </summary>
        public PersistentTopicInternalStats()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PersistentTopicInternalStats
        /// class.
        /// </summary>
        public PersistentTopicInternalStats(long? entriesAddedCounter = default(long?), long? numberOfEntries = default(long?), long? totalSize = default(long?), long? currentLedgerEntries = default(long?), long? currentLedgerSize = default(long?), string lastLedgerCreatedTimestamp = default(string), string lastLedgerCreationFailureTimestamp = default(string), int? waitingCursorsCount = default(int?), int? pendingAddEntriesCount = default(int?), string lastConfirmedEntry = default(string), string state = default(string), IList<LedgerInfo> ledgers = default(IList<LedgerInfo>), IDictionary<string, CursorStats> cursors = default(IDictionary<string, CursorStats>))
        {
            EntriesAddedCounter = entriesAddedCounter;
            NumberOfEntries = numberOfEntries;
            TotalSize = totalSize;
            CurrentLedgerEntries = currentLedgerEntries;
            CurrentLedgerSize = currentLedgerSize;
            LastLedgerCreatedTimestamp = lastLedgerCreatedTimestamp;
            LastLedgerCreationFailureTimestamp = lastLedgerCreationFailureTimestamp;
            WaitingCursorsCount = waitingCursorsCount;
            PendingAddEntriesCount = pendingAddEntriesCount;
            LastConfirmedEntry = lastConfirmedEntry;
            State = state;
            Ledgers = ledgers;
            Cursors = cursors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entriesAddedCounter")]
        public long? EntriesAddedCounter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numberOfEntries")]
        public long? NumberOfEntries { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalSize")]
        public long? TotalSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currentLedgerEntries")]
        public long? CurrentLedgerEntries { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currentLedgerSize")]
        public long? CurrentLedgerSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastLedgerCreatedTimestamp")]
        public string LastLedgerCreatedTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastLedgerCreationFailureTimestamp")]
        public string LastLedgerCreationFailureTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "waitingCursorsCount")]
        public int? WaitingCursorsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pendingAddEntriesCount")]
        public int? PendingAddEntriesCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastConfirmedEntry")]
        public string LastConfirmedEntry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ledgers")]
        public IList<LedgerInfo> Ledgers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cursors")]
        public IDictionary<string, CursorStats> Cursors { get; set; }

    }
}
