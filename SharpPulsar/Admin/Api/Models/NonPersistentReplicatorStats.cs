// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace PulsarAdmin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class NonPersistentReplicatorStats
    {
        /// <summary>
        /// Initializes a new instance of the NonPersistentReplicatorStats
        /// class.
        /// </summary>
        public NonPersistentReplicatorStats()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NonPersistentReplicatorStats
        /// class.
        /// </summary>
        public NonPersistentReplicatorStats(double? msgRateIn = default(double?), double? msgThroughputIn = default(double?), double? msgRateOut = default(double?), double? msgThroughputOut = default(double?), double? msgRateExpired = default(double?), long? replicationBacklog = default(long?), bool? connected = default(bool?), long? replicationDelayInSeconds = default(long?), string inboundConnection = default(string), string inboundConnectedSince = default(string), string outboundConnection = default(string), string outboundConnectedSince = default(string), double? msgDropRate = default(double?))
        {
            MsgRateIn = msgRateIn;
            MsgThroughputIn = msgThroughputIn;
            MsgRateOut = msgRateOut;
            MsgThroughputOut = msgThroughputOut;
            MsgRateExpired = msgRateExpired;
            ReplicationBacklog = replicationBacklog;
            Connected = connected;
            ReplicationDelayInSeconds = replicationDelayInSeconds;
            InboundConnection = inboundConnection;
            InboundConnectedSince = inboundConnectedSince;
            OutboundConnection = outboundConnection;
            OutboundConnectedSince = outboundConnectedSince;
            MsgDropRate = msgDropRate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msgRateIn")]
        public double? MsgRateIn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msgThroughputIn")]
        public double? MsgThroughputIn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msgRateOut")]
        public double? MsgRateOut { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msgThroughputOut")]
        public double? MsgThroughputOut { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msgRateExpired")]
        public double? MsgRateExpired { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "replicationBacklog")]
        public long? ReplicationBacklog { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "connected")]
        public bool? Connected { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "replicationDelayInSeconds")]
        public long? ReplicationDelayInSeconds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inboundConnection")]
        public string InboundConnection { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inboundConnectedSince")]
        public string InboundConnectedSince { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "outboundConnection")]
        public string OutboundConnection { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "outboundConnectedSince")]
        public string OutboundConnectedSince { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msgDropRate")]
        public double? MsgDropRate { get; set; }

    }
}
