// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace PulsarAdmin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class OffloadPolicies
    {
        /// <summary>
        /// Initializes a new instance of the OffloadPolicies class.
        /// </summary>
        public OffloadPolicies()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OffloadPolicies class.
        /// </summary>
        public OffloadPolicies(string offloadersDirectory = default(string), string managedLedgerOffloadDriver = default(string), int? managedLedgerOffloadMaxThreads = default(int?), string s3ManagedLedgerOffloadRegion = default(string), string s3ManagedLedgerOffloadBucket = default(string), string s3ManagedLedgerOffloadServiceEndpoint = default(string), int? s3ManagedLedgerOffloadMaxBlockSizeInBytes = default(int?), int? s3ManagedLedgerOffloadReadBufferSizeInBytes = default(int?), string s3ManagedLedgerOffloadRole = default(string), string s3ManagedLedgerOffloadRoleSessionName = default(string), string gcsManagedLedgerOffloadRegion = default(string), string gcsManagedLedgerOffloadBucket = default(string), int? gcsManagedLedgerOffloadMaxBlockSizeInBytes = default(int?), int? gcsManagedLedgerOffloadReadBufferSizeInBytes = default(int?), string gcsManagedLedgerOffloadServiceAccountKeyFile = default(string), string fileSystemProfilePath = default(string), string fileSystemURI = default(string), bool? s3Driver = default(bool?), bool? gcsDriver = default(bool?), bool? fileSystemDriver = default(bool?))
        {
            OffloadersDirectory = offloadersDirectory;
            ManagedLedgerOffloadDriver = managedLedgerOffloadDriver;
            ManagedLedgerOffloadMaxThreads = managedLedgerOffloadMaxThreads;
            S3ManagedLedgerOffloadRegion = s3ManagedLedgerOffloadRegion;
            S3ManagedLedgerOffloadBucket = s3ManagedLedgerOffloadBucket;
            S3ManagedLedgerOffloadServiceEndpoint = s3ManagedLedgerOffloadServiceEndpoint;
            S3ManagedLedgerOffloadMaxBlockSizeInBytes = s3ManagedLedgerOffloadMaxBlockSizeInBytes;
            S3ManagedLedgerOffloadReadBufferSizeInBytes = s3ManagedLedgerOffloadReadBufferSizeInBytes;
            S3ManagedLedgerOffloadRole = s3ManagedLedgerOffloadRole;
            S3ManagedLedgerOffloadRoleSessionName = s3ManagedLedgerOffloadRoleSessionName;
            GcsManagedLedgerOffloadRegion = gcsManagedLedgerOffloadRegion;
            GcsManagedLedgerOffloadBucket = gcsManagedLedgerOffloadBucket;
            GcsManagedLedgerOffloadMaxBlockSizeInBytes = gcsManagedLedgerOffloadMaxBlockSizeInBytes;
            GcsManagedLedgerOffloadReadBufferSizeInBytes = gcsManagedLedgerOffloadReadBufferSizeInBytes;
            GcsManagedLedgerOffloadServiceAccountKeyFile = gcsManagedLedgerOffloadServiceAccountKeyFile;
            FileSystemProfilePath = fileSystemProfilePath;
            FileSystemURI = fileSystemURI;
            S3Driver = s3Driver;
            GcsDriver = gcsDriver;
            FileSystemDriver = fileSystemDriver;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "offloadersDirectory")]
        public string OffloadersDirectory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "managedLedgerOffloadDriver")]
        public string ManagedLedgerOffloadDriver { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "managedLedgerOffloadMaxThreads")]
        public int? ManagedLedgerOffloadMaxThreads { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "s3ManagedLedgerOffloadRegion")]
        public string S3ManagedLedgerOffloadRegion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "s3ManagedLedgerOffloadBucket")]
        public string S3ManagedLedgerOffloadBucket { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "s3ManagedLedgerOffloadServiceEndpoint")]
        public string S3ManagedLedgerOffloadServiceEndpoint { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "s3ManagedLedgerOffloadMaxBlockSizeInBytes")]
        public int? S3ManagedLedgerOffloadMaxBlockSizeInBytes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "s3ManagedLedgerOffloadReadBufferSizeInBytes")]
        public int? S3ManagedLedgerOffloadReadBufferSizeInBytes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "s3ManagedLedgerOffloadRole")]
        public string S3ManagedLedgerOffloadRole { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "s3ManagedLedgerOffloadRoleSessionName")]
        public string S3ManagedLedgerOffloadRoleSessionName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gcsManagedLedgerOffloadRegion")]
        public string GcsManagedLedgerOffloadRegion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gcsManagedLedgerOffloadBucket")]
        public string GcsManagedLedgerOffloadBucket { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gcsManagedLedgerOffloadMaxBlockSizeInBytes")]
        public int? GcsManagedLedgerOffloadMaxBlockSizeInBytes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gcsManagedLedgerOffloadReadBufferSizeInBytes")]
        public int? GcsManagedLedgerOffloadReadBufferSizeInBytes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gcsManagedLedgerOffloadServiceAccountKeyFile")]
        public string GcsManagedLedgerOffloadServiceAccountKeyFile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fileSystemProfilePath")]
        public string FileSystemProfilePath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fileSystemURI")]
        public string FileSystemURI { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "s3Driver")]
        public bool? S3Driver { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gcsDriver")]
        public bool? GcsDriver { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fileSystemDriver")]
        public bool? FileSystemDriver { get; set; }

    }
}
